import instaloader
import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –£–∫–∞–∂–∏ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "7663426379:AAFR6lhEHn5EJBlAOu6KbWqVl906BF_RcsQ"

bot = Bot(token=TOKEN)
dp = Dispatcher()
loader = instaloader.Instaloader()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_languages = {}

# –î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏
LANGUAGES = {
    "üá¨üáß English": "en",
    "üá∑üá∫ –†—É—Å—Å–∫–∏–π": "ru",
    "üá∫üáø O ªzbek": "uz"
}

MESSAGES = {
    "en": {"start": "Choose your language:", "waiting": "Please wait... Downloading video.", "error": "Send a valid Instagram video link.", "humor": ["Oops! Try again!", "Hmm, what do you mean?", "I am a bot, not a mind reader! üòÜ"]},
    "ru": {"start": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", "waiting": "–ü–æ–¥–æ–∂–¥–∏—Ç–µ... –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ.", "error": "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ Instagram.", "humor": ["–û–π! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!", "–•–º, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –≤ –≤–∏–¥—É?", "–Ø –±–æ—Ç, –∞ –Ω–µ —Ç–µ–ª–µ–ø–∞—Ç! üòÜ"]},
    "uz": {"start": "Tilni tanlang:", "waiting": "Iltimos, kuting... Video yuklanmoqda.", "error": "Instagram video havolasini yuboring.", "humor": ["Voy! Qayta urinib ko'ring!", "Hmm, nimani nazarda tutyapsiz?", "Men botman, telepat emasman! üòÜ"]}
}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
lang_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(flag)] for flag in LANGUAGES],
    resize_keyboard=True
)

@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id
    text = message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —è–∑—ã–∫
    if text in LANGUAGES:
        user_languages[user_id] = LANGUAGES[text]
        await message.reply("‚úÖ " + MESSAGES[user_languages[user_id]]["start"] + "\n\n" + MESSAGES[user_languages[user_id]]["error"], reply_markup=types.ReplyKeyboardRemove())
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–∑—ã–∫
    if user_id not in user_languages:
        await message.reply(MESSAGES["en"]["start"], reply_markup=lang_keyboard)
        return

    lang = user_languages[user_id]
    
    if "instagram.com" not in text:
        await message.reply(MESSAGES[lang]["humor"][hash(text) % len(MESSAGES[lang]["humor"])] )
        return
    
    await message.reply(MESSAGES[lang]["waiting"])
    
    try:
        shortcode = text.split("/")[-2]
        post = instaloader.Post.from_shortcode(loader.context, shortcode)
        loader.download_post(post, target="downloads")
        
        for file in os.listdir("downloads"):
            if file.endswith(".mp4") or file.endswith(".jpg"):
                file_path = os.path.join("downloads", file)
                media = types.FSInputFile(file_path)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º FSInputFile
                
                if file.endswith(".mp4"):
                    await message.answer_video(media, caption="üé¨ Video downloaded from Instagram!")
                else:
                    await message.answer_photo(media, caption="üì∑ Photo from Instagram!")
                
                os.remove(file_path)
    
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è {MESSAGES[lang]['error']}\n({str(e)})")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
