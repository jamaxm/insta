import instaloader
import os
import asyncio
import re
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup

# –£–∫–∞–∂–∏ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "7583472767:AAFQ7rXjLloMv39nSvSh-Dcl1GRN5LXxi3E"

bot = Bot(token=TOKEN)
dp = Dispatcher()
loader = instaloader.Instaloader()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_languages = {}

# –î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏
LANGUAGES = {
    "üá¨üáß English": "en",
    "üá∑üá∫ –†—É—Å—Å–∫–∏–π": "ru",
    "üá∫üáø O ªzbek": "uz"
}

MESSAGES = {
    "en": {
        "start": "Choose your language:",
        "waiting": "Please wait... Downloading video.",
        "error": "Send a valid Instagram video link.",
        "private": "This post is from a private account. I can't download it.",
        "not_found": "The post was not found. It may have been deleted or the link is incorrect.",
        "blocked": "Too many requests! Instagram has temporarily blocked access. Try again later.",
        "humor": ["Oops! Try again!", "Hmm, what do you mean?", "I am a bot, not a mind reader! üòÜ"]
    },
    "ru": {
        "start": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:",
        "waiting": "–ü–æ–¥–æ–∂–¥–∏—Ç–µ... –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ.",
        "error": "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ Instagram.",
        "private": "–≠—Ç–æ—Ç –ø–æ—Å—Ç –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞. –Ø –Ω–µ –º–æ–≥—É –µ–≥–æ —Å–∫–∞—á–∞—Ç—å.",
        "not_found": "–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª—ë–Ω –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞.",
        "blocked": "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤! Instagram –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –¥–æ—Å—Ç—É–ø. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        "humor": ["–û–π! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!", "–•–º, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –≤ –≤–∏–¥—É?", "–Ø –±–æ—Ç, –∞ –Ω–µ —Ç–µ–ª–µ–ø–∞—Ç! üòÜ"]
    },
    "uz": {
        "start": "Tilni tanlang:",
        "waiting": "Iltimos, kuting... Video yuklanmoqda.",
        "error": "Instagram video havolasini yuboring.",
        "private": "Bu post yopiq akkauntdan. Uni yuklab bo'lmaydi.",
        "not_found": "Post topilmadi. U o'chirilgan yoki havola noto'g'ri.",
        "blocked": "Ko'p so'rov yuborildi! Instagram vaqtincha bloklagan. Keyinroq urinib ko'ring.",
        "humor": ["Voy! Qayta urinib ko'ring!", "Hmm, nimani nazarda tutyapsiz?", "Men botman, telepat emasman! üòÜ"]
    }
}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
lang_keyboard = ReplyKeyboardMarkup(
    keyboard=[[types.KeyboardButton(text=flag)] for flag in LANGUAGES.keys()],
    resize_keyboard=True
)

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–∫–∏
INSTAGRAM_REGEX = re.compile(r"https?://(www\.)?instagram\.com/(p|reel|tv)/([A-Za-z0-9_-]+)")

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø–∞–ø–∫–∏ "downloads"
def clean_downloads():
    if not os.path.exists("downloads"):
        os.makedirs("downloads")
    for file in os.listdir("downloads"):
        file_path = os.path.join("downloads", file)
        try:
            os.remove(file_path)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {file}: {e}")

@dp.message(F.text == "/start")
async def start_command(message: types.Message):
    await message.reply(MESSAGES["en"]["start"], reply_markup=lang_keyboard)

@dp.message(F.text)
async def handle_message(message: types.Message):
    user_id = message.from_user.id
    text = message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —è–∑—ã–∫
    if text in LANGUAGES:
        user_languages[user_id] = LANGUAGES[text]
        await message.reply("‚úÖ " + MESSAGES[user_languages[user_id]]["start"] + "\n\n" + MESSAGES[user_languages[user_id]]["error"], reply_markup=types.ReplyKeyboardRemove())
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–∑—ã–∫
    if user_id not in user_languages:
        await message.reply(MESSAGES["en"]["start"], reply_markup=lang_keyboard)
        return

    lang = user_languages[user_id]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–æ–π –Ω–∞ Instagram
    match = INSTAGRAM_REGEX.search(text)
    if not match:
        await message.reply(MESSAGES[lang]["humor"][hash(text) % len(MESSAGES[lang]["humor"])])
        return

    await message.reply(MESSAGES[lang]["waiting"])

    # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
    clean_downloads()

    shortcode = match.group(3)  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ –ø–æ—Å—Ç–∞

    try:
        post = instaloader.Post.from_shortcode(loader.context, shortcode)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ—Å—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–º
        if post.owner_profile.is_private:
            await message.reply(f"‚ö†Ô∏è {MESSAGES[lang]['private']}")
            return

        loader.download_post(post, target="downloads")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        for file in os.listdir("downloads"):
            if file.endswith(".mp4"):
                file_path = os.path.join("downloads", file)
                media = types.FSInputFile(file_path)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º FSInputFile
                await message.answer_video(media, caption="üé¨ Video downloaded from Instagram!")
                os.remove(file_path)

    except instaloader.exceptions.ProfileNotExistsException:
        await message.reply(f"‚ö†Ô∏è {MESSAGES[lang]['not_found']}")
    
    except instaloader.exceptions.ConnectionException:
        await message.reply(f"‚ö†Ô∏è {MESSAGES[lang]['blocked']}")

    except Exception as e:
        await message.reply(f"‚ö†Ô∏è {MESSAGES[lang]['error']}\n({str(e)})")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
